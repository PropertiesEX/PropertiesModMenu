local Players = game:GetService("Players")
local UserInputService = game:GetService("UserInputService")
local TweenService = game:GetService("TweenService")

local player = Players.LocalPlayer
local gui = Instance.new("ScreenGui", player:WaitForChild("PlayerGui"))
gui.Name = "ClassicModMenu"
gui.ResetOnSpawn = false

-- Main Window Frame
local mainFrame = Instance.new("Frame")
mainFrame.Name = "MainWindow"
mainFrame.BackgroundColor3 = Color3.fromRGB(192, 192, 192)
mainFrame.BorderSizePixel = 0
mainFrame.Size = UDim2.new(0, 450, 0, 350)
mainFrame.Position = UDim2.new(0.5, -225, 0.5, -175)
mainFrame.ClipsDescendants = true
mainFrame.Parent = gui

-- Enhanced 3D Border Effect
local function createBorder(parent, position, size, color)
	local border = Instance.new("Frame")
	border.BorderSizePixel = 0
	border.BackgroundColor3 = color
	border.Position = position
	border.Size = size
	border.ZIndex = 2
	border.Parent = parent
	return border
end

-- Outer borders (3D effect)
createBorder(mainFrame, UDim2.new(0, 0, 0, 0), UDim2.new(1, 0, 0, 2), Color3.new(1, 1, 1)) -- Top
createBorder(mainFrame, UDim2.new(0, 0, 0, 0), UDim2.new(0, 2, 1, 0), Color3.new(1, 1, 1)) -- Left
createBorder(mainFrame, UDim2.new(1, -2, 0, 0), UDim2.new(0, 2, 1, 0), Color3.fromRGB(64, 64, 64)) -- Right
createBorder(mainFrame, UDim2.new(0, 0, 1, -2), UDim2.new(1, 0, 0, 2), Color3.fromRGB(64, 64, 64)) -- Bottom

-- Inner borders (Fixed colors for 3D effect)
createBorder(mainFrame, UDim2.new(0, 2, 0, 2), UDim2.new(1, -4, 0, 2), Color3.fromRGB(128, 128, 128)) -- Top (darker)
createBorder(mainFrame, UDim2.new(0, 2, 0, 2), UDim2.new(0, 2, 1, -4), Color3.fromRGB(128, 128, 128)) -- Left (darker)
createBorder(mainFrame, UDim2.new(1, -4, 0, 2), UDim2.new(0, 2, 1, -4), Color3.new(1, 1, 1)) -- Right (white)
createBorder(mainFrame, UDim2.new(0, 2, 1, -4), UDim2.new(1, -4, 0, 2), Color3.new(1, 1, 1)) -- Bottom (white)

-- Title Bar
local titleBar = Instance.new("Frame")
titleBar.Name = "TitleBar"
titleBar.BackgroundColor3 = Color3.fromRGB(0, 0, 128)
titleBar.BorderSizePixel = 0
titleBar.Size = UDim2.new(1, -4, 0, 20)
titleBar.Position = UDim2.new(0, 2, 0, 2)
titleBar.ZIndex = 2
titleBar.Parent = mainFrame

-- Title Bar Text
local titleText = Instance.new("TextLabel")
titleText.Name = "Title"
titleText.BackgroundTransparency = 1
titleText.Position = UDim2.new(0, 4, 0, 2)
titleText.Size = UDim2.new(1, -20, 1, 0)
titleText.Font = Enum.Font.SourceSans
titleText.Text = "Properties GUI v1.0"
titleText.TextColor3 = Color3.new(1, 1, 1)
titleText.TextSize = 14
titleText.TextXAlignment = Enum.TextXAlignment.Left
titleText.ZIndex = 2
titleText.Parent = titleBar

-- Minimize Button
local minimizeButton = Instance.new("TextButton")
minimizeButton.Name = "MinimizeButton"
minimizeButton.BackgroundColor3 = Color3.fromRGB(0, 0, 128)
minimizeButton.BorderSizePixel = 0
minimizeButton.Position = UDim2.new(1, -36, 0, 2)
minimizeButton.Size = UDim2.new(0, 16, 0, 16)
minimizeButton.Font = Enum.Font.SourceSansBold
minimizeButton.Text = "-"
minimizeButton.TextColor3 = Color3.new(1, 1, 1)
minimizeButton.TextSize = 14
minimizeButton.ZIndex = 2
minimizeButton.Parent = titleBar

-- Close Button
local closeButton = Instance.new("TextButton")
closeButton.Name = "CloseButton"
closeButton.BackgroundColor3 = Color3.fromRGB(255, 0, 0)
closeButton.BorderSizePixel = 0
closeButton.Position = UDim2.new(1, -18, 0, 2)
closeButton.Size = UDim2.new(0, 16, 0, 16)
closeButton.Font = Enum.Font.SourceSansBold
closeButton.Text = "X"
closeButton.TextColor3 = Color3.new(1, 1, 1)
closeButton.TextSize = 14
closeButton.ZIndex = 2
closeButton.Parent = titleBar

-- Menu Bar
local menuBar = Instance.new("Frame")
menuBar.Name = "MenuBar"
menuBar.BackgroundColor3 = Color3.fromRGB(192, 192, 192)
menuBar.BorderSizePixel = 0
menuBar.Size = UDim2.new(1, -4, 0, 20)
menuBar.Position = UDim2.new(0, 2, 0, 22)
menuBar.ZIndex = 2
menuBar.Parent = mainFrame

-- Menu Bar Border (Dark bottom line)
createBorder(menuBar, UDim2.new(0, 0, 1, -1), UDim2.new(1, 0, 0, 1), Color3.fromRGB(64, 64, 64))

-- Main Content Area (below menu bar)
local contentFrame = Instance.new("Frame")
contentFrame.Name = "Content"
contentFrame.BackgroundColor3 = Color3.fromRGB(192, 192, 192)
contentFrame.BorderSizePixel = 0
contentFrame.Size = UDim2.new(1, -4, 1, -46)
contentFrame.Position = UDim2.new(0, 2, 0, 46)
contentFrame.ZIndex = 2
contentFrame.Parent = mainFrame

-- Button Container
local buttonContainer = Instance.new("Frame")
buttonContainer.Name = "ButtonContainer"
buttonContainer.BackgroundTransparency = 1
buttonContainer.Size = UDim2.new(1, -20, 1, -20)
buttonContainer.Position = UDim2.new(0, 10, 0, 10)
buttonContainer.Parent = contentFrame

-- Function to create clickable frames
local function createClickableFrame(parent, name, position, imageUrl, scriptUrl)
	local frame = Instance.new("ImageButton")
	frame.Name = name
	frame.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
	frame.BorderSizePixel = 0
	frame.Size = UDim2.new(0.45, 0, 0, 100)
	frame.Position = position
	frame.ZIndex = 3
	frame.Image = imageUrl or "rbxassetid://0" -- Default blank image

	-- Add 3D borders
	createBorder(frame, UDim2.new(0, 0, 0, 0), UDim2.new(1, 0, 0, 2), Color3.new(1, 1, 1)) -- Top
	createBorder(frame, UDim2.new(0, 0, 0, 0), UDim2.new(0, 2, 1, 0), Color3.new(1, 1, 1)) -- Left
	createBorder(frame, UDim2.new(1, -2, 0, 0), UDim2.new(0, 2, 1, 0), Color3.fromRGB(64, 64, 64)) -- Right
	createBorder(frame, UDim2.new(0, 0, 1, -2), UDim2.new(1, 0, 0, 2), Color3.fromRGB(64, 64, 64)) -- Bottom

	-- Text label
	local label = Instance.new("TextLabel")
	label.Name = "Label"
	label.BackgroundColor3 = Color3.fromRGB(0, 0, 128)
	label.BorderSizePixel = 0
	label.Size = UDim2.new(1, 0, 0, 20)
	label.Position = UDim2.new(0, 0, 1, -20)
	label.Font = Enum.Font.SourceSans
	label.Text = name
	label.TextColor3 = Color3.new(1, 1, 1)
	label.TextSize = 14
	label.ZIndex = 4
	label.Parent = frame

	-- Hover effect
	frame.MouseEnter:Connect(function()
		frame.BackgroundColor3 = Color3.fromRGB(230, 230, 230)
	end)

	frame.MouseLeave:Connect(function()
		frame.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
	end)

	-- Click functionality
	frame.MouseButton1Click:Connect(function()
		local success, response = pcall(function()
			-- Use game:HttpGet instead of HttpService
			local scriptContent = game:HttpGet(scriptUrl)
			loadstring(scriptContent)()
		end)

		if not success then
			warn("Failed to load script: " .. response)
		end
	end)

	frame.Parent = parent
	return frame
end

-- Create Void.exe button
createClickableFrame(buttonContainer, "Void.exe", 
	UDim2.new(0, 0, 0, 0),
	"rbxassetid://0", -- Replace with your image ID
	"https://raw.githubusercontent.com/PropertiesEX/PropertiesModMenu/refs/heads/main/Void"
)

-- Create AntiVoid.exe button
createClickableFrame(buttonContainer, "AntiVoid.exe", 
	UDim2.new(0.55, 0, 0, 0),
	"rbxassetid://0", -- Replace with your image ID
	"https://raw.githubusercontent.com/PropertiesEX/PropertiesModMenu/refs/heads/main/BudgetAntiVoid"
)

-- Menu Items (File, Edit, View, Help)
local menuItems = {"File", "Edit", "View", "Help"}
local menuXOffset = 4

for _, item in pairs(menuItems) do
	local menuButton = Instance.new("TextButton")
	menuButton.Name = item
	menuButton.BackgroundTransparency = 1
	menuButton.Position = UDim2.new(0, menuXOffset, 0, 2)
	menuButton.Size = UDim2.new(0, 40, 1, 0)
	menuButton.Font = Enum.Font.SourceSans
	menuButton.Text = item
	menuButton.TextColor3 = Color3.new(0, 0, 0) -- Default text color (black)
	menuButton.TextSize = 14
	menuButton.TextXAlignment = Enum.TextXAlignment.Left
	menuButton.ZIndex = 2
	menuButton.Parent = menuBar

	-- Hover effect: Change text color to white when hovered
	menuButton.MouseEnter:Connect(function()
		menuButton.TextColor3 = Color3.new(1, 1, 1) -- White text color
	end)

	menuButton.MouseLeave:Connect(function()
		menuButton.TextColor3 = Color3.new(0, 0, 0) -- Black text color
	end)

	menuXOffset += 40
end

-- Dropdown Menu Functionality
local openDropdown = nil
local keybinds = {
	minimize = Enum.KeyCode.K
}

-- Function to create dropdown frames
local function createDropdown(parent, items, isKeybind)
	-- If a dropdown is already open, close it
	if openDropdown then
		openDropdown:Destroy()
		openDropdown = nil
		-- If the same button is clicked again, stop here
		if openDropdownParent == parent then
			openDropdownParent = nil
			return
		end
	end

	-- Store the parent of the dropdown
	openDropdownParent = parent

	local dropdownFrame = Instance.new("Frame")
	dropdownFrame.Name = "Dropdown"
	dropdownFrame.BackgroundColor3 = Color3.fromRGB(192, 192, 192)
	dropdownFrame.BorderSizePixel = 0
	dropdownFrame.Position = UDim2.new(0, 0, 1, 0)
	dropdownFrame.Size = UDim2.new(0, 120, 0, 0)
	dropdownFrame.ClipsDescendants = true
	dropdownFrame.ZIndex = 5
	dropdownFrame.Parent = parent

	-- Create 3D borders for dropdown
	createBorder(dropdownFrame, UDim2.new(0, 0, 0, 0), UDim2.new(1, 0, 0, 2), Color3.new(1, 1, 1)) -- Top
	createBorder(dropdownFrame, UDim2.new(0, 0, 0, 0), UDim2.new(0, 2, 1, 0), Color3.new(1, 1, 1)) -- Left
	createBorder(dropdownFrame, UDim2.new(1, -2, 0, 0), UDim2.new(0, 2, 1, 0), Color3.fromRGB(64, 64, 64)) -- Right
	createBorder(dropdownFrame, UDim2.new(0, 0, 1, -2), UDim2.new(1, 0, 0, 2), Color3.fromRGB(64, 64, 64)) -- Bottom

	local itemHeight = 20
	local padding = 2
	local totalHeight = 0
	local itemsContainer = Instance.new("Frame")
	itemsContainer.Name = "Items"
	itemsContainer.BackgroundTransparency = 1
	itemsContainer.Size = UDim2.new(1, -4, 1, -4)
	itemsContainer.Position = UDim2.new(0, 2, 0, 2)
	itemsContainer.Parent = dropdownFrame

	for i, item in ipairs(items) do
		local itemFrame = Instance.new("TextButton")
		itemFrame.Name = item.name
		itemFrame.BackgroundColor3 = Color3.fromRGB(192, 192, 192) -- Match main menu color
		itemFrame.BorderSizePixel = 0
		itemFrame.Size = UDim2.new(1, 0, 0, itemHeight)
		itemFrame.Position = UDim2.new(0, 0, 0, (i-1)*(itemHeight + padding))
		itemFrame.Font = Enum.Font.SourceSans
		itemFrame.Text = isKeybind and (item.name .. ": " .. keybinds[item.id].Name) or item.name
		itemFrame.TextColor3 = Color3.new(0, 0, 0)
		itemFrame.TextSize = 14
		itemFrame.TextXAlignment = Enum.TextXAlignment.Left
		itemFrame.ZIndex = 6
		itemFrame.Parent = itemsContainer

		-- Add borders to each dropdown button
		createBorder(itemFrame, UDim2.new(0, 0, 0, 0), UDim2.new(1, 0, 0, 1), Color3.fromRGB(128, 128, 128)) -- Top
		createBorder(itemFrame, UDim2.new(0, 0, 0, 0), UDim2.new(0, 1, 1, 0), Color3.fromRGB(128, 128, 128)) -- Left
		createBorder(itemFrame, UDim2.new(1, -1, 0, 0), UDim2.new(0, 1, 1, 0), Color3.new(1, 1, 1)) -- Right
		createBorder(itemFrame, UDim2.new(0, 0, 1, -1), UDim2.new(1, 0, 0, 1), Color3.new(1, 1, 1)) -- Bottom

		-- Hover effect
		itemFrame.MouseEnter:Connect(function()
			itemFrame.BackgroundColor3 = Color3.fromRGB(0, 0, 128) -- Blue background on hover
			itemFrame.TextColor3 = Color3.new(1, 1, 1) -- White text on hover
		end)

		itemFrame.MouseLeave:Connect(function()
			itemFrame.BackgroundColor3 = Color3.fromRGB(192, 192, 192) -- Restore background color
			itemFrame.TextColor3 = Color3.new(0, 0, 0) -- Restore text color
		end)

		if isKeybind then
			local keyButton = Instance.new("TextButton")
			keyButton.Name = "KeyButton"
			keyButton.BackgroundColor3 = Color3.fromRGB(192, 192, 192)
			keyButton.BorderSizePixel = 0
			keyButton.Size = UDim2.new(0, 40, 0, 16)
			keyButton.Position = UDim2.new(1, -44, 0.5, -8)
			keyButton.Font = Enum.Font.SourceSans
			keyButton.Text = keybinds[item.id].Name
			keyButton.TextColor3 = Color3.new(0, 0, 0)
			keyButton.TextSize = 12
			keyButton.ZIndex = 6
			keyButton.Parent = itemFrame

			-- Add borders to keybind button
			createBorder(keyButton, UDim2.new(0, 0, 0, 0), UDim2.new(1, 0, 0, 1), Color3.fromRGB(128, 128, 128)) -- Top
			createBorder(keyButton, UDim2.new(0, 0, 0, 0), UDim2.new(0, 1, 1, 0), Color3.fromRGB(128, 128, 128)) -- Left
			createBorder(keyButton, UDim2.new(1, -1, 0, 0), UDim2.new(0, 1, 1, 0), Color3.new(1, 1, 1)) -- Right
			createBorder(keyButton, UDim2.new(0, 0, 1, -1), UDim2.new(1, 0, 0, 1), Color3.new(1, 1, 1)) -- Bottom

			keyButton.MouseButton1Click:Connect(function()
				keyButton.Text = "..."
				local connection
				connection = UserInputService.InputBegan:Connect(function(input) -- Fixed: Replaced . with :
					if input.UserInputType == Enum.UserInputType.Keyboard then
						keybinds[item.id] = input.KeyCode
						keyButton.Text = input.KeyCode.Name
						connection:Disconnect()
					end
				end)
			end)
		else
			itemFrame.MouseButton1Click:Connect(item.callback)
		end

		totalHeight = totalHeight + itemHeight + padding
	end

	dropdownFrame.Size = UDim2.new(0, 120, 0, totalHeight + 4)
	openDropdown = dropdownFrame

	return dropdownFrame
end

-- File dropdown items
local fileItems = {
	{name = "New", callback = function() print("New clicked") end},
	{name = "Save", callback = function() print("Save clicked") end},
	{name = "Add", callback = function() print("Add clicked") end}
}

-- View dropdown items (keybinds)
local viewItems = {
	{name = "Minimize            ", id = "minimize"}
}

-- Connect menu buttons
for _, child in ipairs(menuBar:GetChildren()) do
	if child:IsA("TextButton") then
		child.MouseButton1Click:Connect(function()
			if child.Name == "File" then
				createDropdown(child, fileItems)
			elseif child.Name == "View" then
				createDropdown(child, viewItems, true)
			end
		end)
	end
end

-- Close dropdown when clicking outside (fixed version)
UserInputService.InputBegan:Connect(function(input, processed)
	if processed then return end
	if input.UserInputType == Enum.UserInputType.MouseButton1 and openDropdown then
		local mousePos = UserInputService:GetMouseLocation()
		local dropdownPos = openDropdown.AbsolutePosition
		local dropdownSize = openDropdown.AbsoluteSize

		-- Check if click is outside dropdown
		if not (mousePos.X >= dropdownPos.X and mousePos.X <= dropdownPos.X + dropdownSize.X and
			mousePos.Y >= dropdownPos.Y and mousePos.Y <= dropdownPos.Y + dropdownSize.Y) then
			openDropdown:Destroy()
			openDropdown = nil
		end
	end
end)

-- Dragging functionality
local dragging
local dragInput
local dragStart
local startPos

local function update(input)
	local delta = input.Position - dragStart
	mainFrame.Position = UDim2.new(startPos.X.Scale, startPos.X.Offset + delta.X, startPos.Y.Scale, startPos.Y.Offset + delta.Y)
end

titleBar.InputBegan:Connect(function(input)
	if input.UserInputType == Enum.UserInputType.MouseButton1 then
		dragging = true
		dragStart = input.Position
		startPos = mainFrame.Position

		input.Changed:Connect(function()
			if input.UserInputState == Enum.UserInputState.End then
				dragging = false
			end
		end)
	end
end)

titleBar.InputChanged:Connect(function(input)
	if input.UserInputType == Enum.UserInputType.MouseMovement then
		dragInput = input
	end
end)

UserInputService.InputChanged:Connect(function(input)
	if input == dragInput and dragging then
		update(input)
	end
end)

-- Minimize functionality with smooth transition
local isMinimized = false
local originalSize = mainFrame.Size
local tweenInfo = TweenInfo.new(0.2, Enum.EasingStyle.Quad, Enum.EasingDirection.Out)

-- Create a shared toggle function
local function toggleMinimize()
	isMinimized = not isMinimized
	if isMinimized then
		local tween = TweenService:Create(mainFrame, tweenInfo, {Size = UDim2.new(originalSize.X.Scale, originalSize.X.Offset, 0, 23)})
		tween:Play()
		minimizeButton.Text = "+"
	else
		local tween = TweenService:Create(mainFrame, tweenInfo, {Size = originalSize})
		tween:Play()
		minimizeButton.Text = "-"
	end
end

-- Connect button click
minimizeButton.MouseButton1Click:Connect(toggleMinimize)

-- Update keybind handler
UserInputService.InputBegan:Connect(function(input, processed)
	if not processed and input.KeyCode == keybinds.minimize then
		toggleMinimize() -- Call the shared function directly
	end
end)

-- Close button functionality
closeButton.MouseButton1Click:Connect(function()
	gui:Destroy()
end)
